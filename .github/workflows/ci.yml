name: CI
on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          sudo apt-get update && sudo apt-get install -y build-essential cmake libssl-dev libspdlog-dev nlohmann-json3-dev libcurl4-openssl-dev libncurses5-dev libncursesw5-dev cppcheck clang-tidy
        else
          choco install cmake --installarguments 'ADD_CMAKE_TO_PATH=System' --yes
          choco install openssl.light --yes
          choco install nlohmann-json --yes
          choco install spdlog --yes
        fi
    - name: Build
      shell: bash
      run: |
        mkdir build
        cd build
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . --config Release
        else
          cmake -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . --config Release
        fi
    - name: Static analysis
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd build
        cppcheck ../src ../include
        clang-tidy ../src/*.cpp -- -I../include
    - name: Create Release and upload binary
      if: startsWith(github.ref, 'refs/tags/')
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        files: |
          build/pwdmgr
          build/Release/pwdmgr.exe 